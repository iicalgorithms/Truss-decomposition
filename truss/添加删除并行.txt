1.将Graph.cpp，Graph.h，main.cpp放到同一个文件夹下。编译，命令如下（win与linux相同）：
g++ -std=c++11 main.cpp Graph.cpp -o main
2.在当前文件夹建立log.txt，用于保存结果
3.将数据文件移动到该文件夹下，使用命令进行编译
main CA-GrQc.txt 1 0 9 2 100 w
(Linux命令为：./main CA-GrQc.txt 1 0 9 2 100 w)

参数说明：
CA-GrQc.txt - 文件名
1 - 贪心或分布式（无需改动，默认为分布式1，贪心0存在问题）
0 - 图模式（无需改动，3为添加点）
9 - 计算模式（6为迭代插入，7为并行插入，8为迭代删除，9为并行删除）
2 - 数量（插入/删除的边的数目。2为10^2为100条）
100 - 随机种子（整数值，改变该参数可以进行不同的随机，相同随机种子的随机结果相同）
w - 无需改变，将结果写入log.txt中

运行结果存放在log.txt中，格式如下
Parameter Message : CA-GrQc.txt 1 0 9 2 
Number of cycles: 9 
Max inserted edges number of all cycles: 65 
Time: 171.000000 mm
--------------------------------
第一行为命令
第二行为并行分为几批次（迭代插入为0）
第三行为并行批次中，点的数目最多的那一批的点数（迭代插入该行无意义）
第四行为时间，单位为毫秒。（操作数目为1条的时候由于时间太短可能是0，但是不代表时间为0）

预计运行速度不会太慢。迭代插入/删除尤其慢，但是几乎线性增长。
建议不要一次只运行一个，建议多开终端窗口并行运行（或者&后台并行运行）。

已经上传github，或者在我的机位的 C:\Users\ST\Desktop\truss\Truss-decomposition\truss
密码 liutong864575542
